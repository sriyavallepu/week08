name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      product_api_ip:
        description: "External IP of Product Service (e.g., http://4.254.8.38:8000)"
        required: true
      order_api_ip:
        description: "External IP of Order Service (e.g., http://4.254.37.55:8001)"
        required: true
      aks_cluster_name:
        description: "Name of the AKS Cluster to deploy to"
        required: true
      aks_resource_group:
        description: "Resource Group of the AKS Cluster"
        required: true

  workflow_call:
    inputs:
      product_api_ip:      { type: string, required: true }
      order_api_ip:        { type: string, required: true }
      aks_cluster_name:    { type: string, required: true }
      aks_resource_group:  { type: string, required: true }

env:
  ACR_LOGIN_SERVER: week8regisry.azurecr.io

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name: ${{ inputs.aks_cluster_name }}

      - name: Inject Backend IPs into frontend/main.js
        shell: bash
        run: |
          set -e
          FILE="frontend/main.js"
          echo "Working dir: $(pwd)"
          ls -la frontend || true
          if [[ ! -f "$FILE" ]]; then
            echo "ERROR: $FILE not found"
            exit 1
          fi
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" "$FILE" || true
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" "$FILE" || true
          if grep -qE '^const[[:space:]]+PRODUCT_IP' "$FILE"; then
            sed -i -E 's|^const[[:space:]]+PRODUCT_IP.*|const PRODUCT_IP = "'"${{ inputs.product_api_ip }}"'";|' "$FILE"
          else
            echo 'const PRODUCT_IP = "'"${{ inputs.product_api_ip }}"'";' >> "$FILE"
          fi
          if grep -qE '^const[[:space:]]+ORDER_IP' "$FILE"; then
            sed -i -E 's|^const[[:space:]]+ORDER_IP.*|const ORDER_IP = "'"${{ inputs.order_api_ip }}"'";|' "$FILE"
          else
            echo 'const ORDER_IP = "'"${{ inputs.order_api_ip }}"'";' >> "$FILE"
          fi
          echo "Final values (non-fatal grep):"
          grep -nE 'PRODUCT_IP|ORDER_IP' "$FILE" || true

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

      - name: Build & push FRONTEND image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.ACR_LOGIN_SERVER }}/frontend:latest

      - name: Deploy Frontend to AKS
        run: |
          kubectl apply -f k8s/frontend.yaml
          kubectl rollout status deploy/frontend --timeout=180s
