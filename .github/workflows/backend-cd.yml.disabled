name: Backend CD (deploy product & order to AKS)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  ACR_LOGIN_SERVER: week9acr.azurecr.io
  IMAGE_TAG: ${{ github.sha }}
  NS: shop
  AZ_RG: deakinuni
  AKS_NAME: week9aks

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS context
        run: |
          az aks get-credentials --resource-group "$AZ_RG" --name "$AKS_NAME" --overwrite-existing
          kubectl version --client=true

      - name: Ensure namespace exists
        run: |
          kubectl create namespace "$NS" --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Kubernetes manifests (db + services + secrets)
        run: |
          kubectl apply -n "$NS" -f k8s/secrets.yaml
          kubectl apply -n "$NS" -f k8s/product-db.yaml
          kubectl apply -n "$NS" -f k8s/order-db.yaml
          kubectl apply -n "$NS" -f k8s/product-service.yaml
          kubectl apply -n "$NS" -f k8s/order-service.yaml

      - name: Set backend images to exact SHA
        run: |
          kubectl set image deploy/product-service -n "$NS" product=${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}
          kubectl set image deploy/order-service   -n "$NS" order=${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}

      - name: Wait for rollout (product & order)
        run: |
          kubectl rollout status deploy/product-service -n "$NS" --timeout=180s
          kubectl rollout status deploy/order-service   -n "$NS" --timeout=180s

      - name: Show service IPs
        run: |
          kubectl get svc -n "$NS" -o wide

      - name: Smoke test product & order
        run: |
          set -e
          PROD_IP=$(kubectl get svc product-service -n "$NS" -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          ORDER_IP=$(kubectl get svc order-service   -n "$NS" -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "PRODUCT → http://$PROD_IP:8000"
          echo "ORDER   → http://$ORDER_IP:8001"
          curl -sS -I "http://$PROD_IP:8000"  | head -n1
          curl -sS -I "http://$ORDER_IP:8001" | head -n1
